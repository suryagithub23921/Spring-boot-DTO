replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Specifies the secret name for a custom CA Truststore
caCerts:
   secretName:
   password:

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

rbac:
  # Specifies whether RBAC resources should be created
  create: true

podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/path: "/actuator/prometheus"
  prometheus.io/port: "7777"

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  port: 9292


resources: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

applicationConfig:
  #Database connection 
  spring:
    datasource:
      password:
      url:
      username:
      hikari:
        autoCommit: false
        maximumPoolSize: 20
        minimumIdle: 5
        idleTimeout: 35000
        maxLifetime: 1800000
    jpa:
      open-in-view: false
      hibernate:
        ddl-auto: none
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQL95Dialect
          jdbc:
            lob:
              non_contextual_creation: true
  #Spring Boot Actuator
  management:
    endpoints:
      web:
        exposure:
          include: "health,prometheus"
  # Spring Server Port
  server:
    port: 9292
    use-forward-headers: true